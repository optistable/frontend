/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../common";
import type {
  StablecoinInsurancePolicy,
  StablecoinInsurancePolicyInterface,
} from "../StablecoinInsurancePolicy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_insured",
        type: "address",
      },
      {
        internalType: "address",
        name: "_insuredToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_insurerToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_premiumToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_insuredAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_premiumAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_policyTermInSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depegTermInSeconds",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_dataProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_managementContract",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "activatePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "insuredDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "insurerDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isDepegged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recordDepeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newDataProvider",
        type: "address",
      },
    ],
    name: "setDataProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040819052600060088190556009819055600a818155600b919091556010805463ffffffff1916909117905562001496388190039081908339810160408190526200004c91620003b0565b6001600160a01b038916620000a85760405162461bcd60e51b815260206004820152601f60248201527f496e737572656420746f6b656e206d757374206265207370656369666965640060448201526064015b60405180910390fd5b6001600160a01b0388166200010b5760405162461bcd60e51b815260206004820152602260248201527f436f6c6c61746572616c20746f6b656e206d7573742062652073706563696669604482015261195960f21b60648201526084016200009f565b6001600160a01b038716620001635760405162461bcd60e51b815260206004820152601f60248201527f5072656d69756d20746f6b656e206d757374206265207370656369666965640060448201526064016200009f565b876001600160a01b0316896001600160a01b031603620001ec5760405162461bcd60e51b815260206004820152603460248201527f496e737572656420746f6b656e20616e6420636f6c6c61746572616c20746f6b60448201527f656e206d75737420626520646966666572656e7400000000000000000000000060648201526084016200009f565b600086116200024c5760405162461bcd60e51b815260206004820152602560248201527f496e737572656420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016200009f565b600085116200029e5760405162461bcd60e51b815260206004820152601e60248201527f5072656d69756d206d7573742062652067726561746572207468616e2030000060448201526064016200009f565b6001600160a01b038216620002f65760405162461bcd60e51b815260206004820152601f60248201527f446174612070726f7669646572206d757374206265207370656369666965640060448201526064016200009f565b600180546001600160a01b03199081166001600160a01b039c8d16179091556003805482169a8c169a909a17909955600480548a16988b1698909817909755600580548916968a1696909617909555600693909355600c91909155600755600d55601280548416918516919091179055426011556010805460ff60201b19166401000000001790556000805490921692169190911790556200045b565b80516001600160a01b0381168114620003ab57600080fd5b919050565b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b62000393565b9950620003ec60208c0162000393565b9850620003fc60408c0162000393565b97506200040c60608c0162000393565b965060808b0151955060a08b0151945060c08b0151935060e08b01519250620004396101008c0162000393565b91506200044a6101208c0162000393565b90509295989b9194979a5092959850565b61102b806200046b6000396000f3fe60806040526004361061007b5760003560e01c8063660d403f1161004e578063660d403f146100d55780636709c18b146100ea5780638b4924a1146100ff578063cc01f8751461010757600080fd5b806309a7cb34146100805780634ef2cc001461008a5780635a0332a41461009f5780636474be6a146100c0575b600080fd5b610088610127565b005b34801561009657600080fd5b5061008861032e565b3480156100ab57600080fd5b50604080516000815290519081900360200190f35b3480156100cc57600080fd5b5061008861045b565b3480156100e157600080fd5b5061008861068d565b3480156100f657600080fd5b5061008861081c565b6100886108f9565b34801561011357600080fd5b50610088610122366004610cf1565b610b05565b6002546001600160a01b0316331461015a5760405162461bcd60e51b815260040161015190610d21565b60405180910390fd5b600654600354604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190610d68565b10156101ed5760405162461bcd60e51b815260040161015190610d81565b6006546003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c9190610d68565b101561027a5760405162461bcd60e51b815260040161015190610dde565b6003546006546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610e26565b6103155760405162461bcd60e51b815260040161015190610e48565b34600960008282546103279190610ea7565b9091555050565b6000601054600160201b900460ff16600481111561034e5761034e610ec0565b1415801561037a57506003601054600160201b900460ff16600481111561037757610377610ec0565b14155b80156103a457506004601054600160201b900460ff1660048111156103a1576103a1610ec0565b14155b6040516020016103b390610ed6565b604051602081830303815290604052906103e05760405162461bcd60e51b81526004016101519190610f4f565b506001546001600160a01b0316331461040b5760405162461bcd60e51b815260040161015190610f62565b61043d6040518060400160405280601181526020017043616e63656c6c696e6720706f6c69637960781b815250610b43565b601080546003919064ff000000001916600160201b835b0217905550565b6000601054600160201b900460ff16600481111561047b5761047b610ec0565b141580156104a757506003601054600160201b900460ff1660048111156104a4576104a4610ec0565b14155b80156104d157506004601054600160201b900460ff1660048111156104ce576104ce610ec0565b14155b6040516020016104e090610ed6565b6040516020818303038152906040529061050d5760405162461bcd60e51b81526004016101519190610f4f565b50306001600160a01b0316635a0332a46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561054c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105709190610e26565b1561066b576002601054600160201b900460ff16600481111561059557610595610ec0565b0361064f57601054600f5463ffffffff909116906105b39043610fa9565b6105bd9190610fbc565b600e60008282546105ce9190610ea7565b925050819055506106076040518060400160405280600e81526020016d03a34b6b2a232b832b3b3b2b21d160951b815250600e54610b89565b600d54600e541061064a576106426040518060400160405280600f81526020016e10db185a5b481d195c9b5cc81b595d608a1b815250610b43565b61064a610bd2565b610665565b6010805464ff0000000019166402000000001790555b43600f55565b6000600e55601080546001919064ff000000001916600160201b83610454565b565b6002546001600160a01b031633146106b75760405162461bcd60e51b815260040161015190610d21565b6000601054600160201b900460ff1660048111156106d7576106d7610ec0565b146107245760405162461bcd60e51b815260206004820152601f60248201527f506f6c696379206d757374206265206177616974696e6720696e7375726572006044820152606401610151565b60065460085410156107485760405162461bcd60e51b815260040161015190610dde565b600c54600a54101561079c5760405162461bcd60e51b815260206004820181905260248201527f496e7375726564206d757374206465706f73697420746865207072656d69756d6044820152606401610151565b60065460095410156108015760405162461bcd60e51b815260206004820152602860248201527f496e7375726572206d757374206465706f7369742074686520726571756972656044820152671908185b5bdd5b9d60c21b6064820152608401610151565b601080546001919064ff000000001916600160201b83610454565b6000601054600160201b900460ff16600481111561083c5761083c610ec0565b1415801561086857506003601054600160201b900460ff16600481111561086557610865610ec0565b14155b801561089257506004601054600160201b900460ff16600481111561088f5761088f610ec0565b14155b6040516020016108a190610ed6565b604051602081830303815290604052906108ce5760405162461bcd60e51b81526004016101519190610f4f565b506002546001600160a01b0316331461068b5760405162461bcd60e51b815260040161015190610d21565b6001546001600160a01b031633146109235760405162461bcd60e51b815260040161015190610f62565b6000600c546006546109359190610ea7565b600354604051636eb1769f60e11b815233600482015230602482015291925082916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610d68565b10156109ca5760405162461bcd60e51b815260040161015190610d81565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190610d68565b1015610a545760405162461bcd60e51b815260040161015190610dde565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190610e26565b610aeb5760405162461bcd60e51b815260040161015190610e48565b8060086000828254610afd9190610ea7565b909155505050565b60405162461bcd60e51b8152602060048201526013602482015272139bdd081a5b5c1b195b595b9d1959081e595d606a1b6044820152606401610151565b610b8681604051602401610b579190610f4f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610cd0565b50565b610bce8282604051602401610b9f929190610fd3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610cd0565b5050565b6000601054600160201b900460ff166004811115610bf257610bf2610ec0565b14158015610c1e57506003601054600160201b900460ff166004811115610c1b57610c1b610ec0565b14155b8015610c4857506004601054600160201b900460ff166004811115610c4557610c45610ec0565b14155b604051602001610c5790610ed6565b60405160208183030381529060405290610c845760405162461bcd60e51b81526004016101519190610f4f565b50610cb56040518060400160405280600f81526020016e457865637574696e6720636c61696d60881b815250610b43565b601080546004919064ff000000001916600160201b83610454565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610d0357600080fd5b81356001600160a01b0381168114610d1a57600080fd5b9392505050565b60208082526027908201527f4f6e6c792074686520696e73757265722063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b600060208284031215610d7a57600080fd5b5051919050565b6020808252603f908201527f496e7375726564206d75737420617070726f76652074686520706f6c6963792060408201527f746f207472616e736665722074686520726571756972656420616d6f756e7400606082015260800190565b60208082526028908201527f496e7375726564206d757374206465706f7369742074686520726571756972656040820152671908185b5bdd5b9d60c21b606082015260800190565b600060208284031215610e3857600080fd5b81518015158114610d1a57600080fd5b60208082526029908201527f496e7375726564206d757374207472616e736665722074686520726571756972604082015268195908185b5bdd5b9d60ba1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610eba57610eba610e91565b92915050565b634e487b7160e01b600052602160045260246000fd5b7f506f6c696379206d75737420626520696e20616e2061637469766520737461748152606560f81b602082015260210190565b6000815180845260005b81811015610f2f57602081850181015186830182015201610f13565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d1a6020830184610f09565b60208082526027908201527f4f6e6c792074686520696e73757265642063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b81810381811115610eba57610eba610e91565b8082028115828204841417610eba57610eba610e91565b604081526000610fe66040830185610f09565b9050826020830152939250505056fea26469706673582212205f72066a2a73b76c314b17486b7232b63ae1825642063c5d68815ffe9c557baa64736f6c63430008130033";

type StablecoinInsurancePolicyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StablecoinInsurancePolicyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StablecoinInsurancePolicy__factory extends ContractFactory {
  constructor(...args: StablecoinInsurancePolicyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _insured: AddressLike,
    _insuredToken: AddressLike,
    _insurerToken: AddressLike,
    _premiumToken: AddressLike,
    _insuredAmount: BigNumberish,
    _premiumAmount: BigNumberish,
    _policyTermInSeconds: BigNumberish,
    _depegTermInSeconds: BigNumberish,
    _dataProvider: AddressLike,
    _managementContract: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _insured,
      _insuredToken,
      _insurerToken,
      _premiumToken,
      _insuredAmount,
      _premiumAmount,
      _policyTermInSeconds,
      _depegTermInSeconds,
      _dataProvider,
      _managementContract,
      overrides || {}
    );
  }
  override deploy(
    _insured: AddressLike,
    _insuredToken: AddressLike,
    _insurerToken: AddressLike,
    _premiumToken: AddressLike,
    _insuredAmount: BigNumberish,
    _premiumAmount: BigNumberish,
    _policyTermInSeconds: BigNumberish,
    _depegTermInSeconds: BigNumberish,
    _dataProvider: AddressLike,
    _managementContract: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _insured,
      _insuredToken,
      _insurerToken,
      _premiumToken,
      _insuredAmount,
      _premiumAmount,
      _policyTermInSeconds,
      _depegTermInSeconds,
      _dataProvider,
      _managementContract,
      overrides || {}
    ) as Promise<
      StablecoinInsurancePolicy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StablecoinInsurancePolicy__factory {
    return super.connect(runner) as StablecoinInsurancePolicy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StablecoinInsurancePolicyInterface {
    return new Interface(_abi) as StablecoinInsurancePolicyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StablecoinInsurancePolicy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StablecoinInsurancePolicy;
  }
}
