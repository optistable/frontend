/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDataProviderAlt,
  IDataProviderAltInterface,
} from "../IDataProviderAlt";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "insuredToken",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "collateralToken",
        type: "bytes32",
      },
    ],
    name: "getCurrentPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDataProviderAlt__factory {
  static readonly abi = _abi;
  static createInterface(): IDataProviderAltInterface {
    return new Interface(_abi) as IDataProviderAltInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDataProviderAlt {
    return new Contract(address, _abi, runner) as unknown as IDataProviderAlt;
  }
}
