/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RedstoneDataProvider,
  RedstoneDataProviderInterface,
} from "../RedstoneDataProvider";

const _abi = [
  {
    inputs: [],
    name: "CalldataMustHaveValidPayload",
    type: "error",
  },
  {
    inputs: [],
    name: "CalldataOverOrUnderFlow",
    type: "error",
  },
  {
    inputs: [],
    name: "CanNotPickMedianOfEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampMustNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "EachSignerMustProvideTheSameValue",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyCalldataPointersArr",
    type: "error",
  },
  {
    inputs: [],
    name: "GetDataServiceIdNotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectUnsignedMetadataSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedSignersCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredSignersCount",
        type: "uint256",
      },
    ],
    name: "InsufficientNumberOfUniqueSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCalldataPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivedSigner",
        type: "address",
      },
    ],
    name: "SignerNotAuthorised",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "TimestampFromTooLongFuture",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "TimestampIsTooOld",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_translateTo",
        type: "bytes32",
      },
    ],
    name: "addAddressMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "aggregateValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extractTimestampsAndAssertAllAreEqual",
    outputs: [
      {
        internalType: "uint256",
        name: "extractedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAuthorisedSignerIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_srcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_targetAddress",
        type: "address",
      },
    ],
    name: "getCurrentPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataServiceId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniqueSignersThreshold",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampMilliseconds",
        type: "uint256",
      },
    ],
    name: "validateTimestamp",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112eb8061007e6000396000f3fe6080604052600436106100a75760003560e01c8063b24ebfcc11610064578063b24ebfcc1461019a578063c274583a146101ba578063e34e1e34146101fb578063f2fde38b1461021b578063f50b2efe1461023b578063f90c49241461025b57600080fd5b80633ce142f5146100ac57806355a547d5146100e3578063715018a61461010657806382c947b71461011d5780638da5cb5b1461014a578063969d0b1614610172575b600080fd5b3480156100b857600080fd5b506100cc6100c736600461104e565b61026f565b60405160ff90911681526020015b60405180910390f35b3480156100ef57600080fd5b506100f86102cb565b6040519081526020016100da565b34801561011257600080fd5b5061011b6103e3565b005b34801561012957600080fd5b506100f861013836600461104e565b60016020526000908152604090205481565b34801561015657600080fd5b506000546040516001600160a01b0390911681526020016100da565b610185610180366004611069565b6103f7565b604080519283526020830191909152016100da565b3480156101a657600080fd5b506100f86101b53660046110b2565b6104d7565b3480156101c657600080fd5b50604080518082018252601281527172656473746f6e652d6d61696e2d64656d6f60701b602082015290516100da9190611164565b34801561020757600080fd5b5061011b6102163660046111b2565b6104e8565b34801561022757600080fd5b5061011b61023636600461104e565b61050c565b34801561024757600080fd5b5061011b6102563660046111dc565b610585565b34801561026757600080fd5b5060016100cc565b60006001600160a01b038216730c39486f770b26f5527bbbf942726537986cd7eb0361029d57506000919050565b6040516303b1166f60e61b81526001600160a01b03831660048201526024015b60405180910390fd5b919050565b6000806102d661058e565b905060006102e38261063c565b61ffff1690508060000361030a57604051632154bfcf60e21b815260040160405180910390fd5b61031560028361120b565b915060005b818110156103dd57600061032d84610676565b905060008061033d60688761120b565b9050600061034b823661121e565b9050803592508265ffffffffffff1660000361037a57604051630336dc9d60e41b815260040160405180910390fd5b87600003610392578265ffffffffffff1697506103ba565b878365ffffffffffff16146103ba5760405163d9d1f46560e01b815260040160405180910390fd5b6103c4848861120b565b96505050505080806103d590611231565b91505061031a565b50505090565b6103eb6106b2565b6103f5600061070c565b565b6001600160a01b0380831660009081526001602052604080822054928416825281205490918291816104635760405162461bcd60e51b81526020600482015260156024820152741cdc98c81859191c995cdcc81b9bdd08199bdd5b99605a1b60448201526064016102bd565b806104b05760405162461bcd60e51b815260206004820152601860248201527f7461726765742061646472657373206e6f7420666f756e64000000000000000060448201526064016102bd565b60006104bb8361075c565b905060006104c88361075c565b91989197509095505050505050565b60006104e2826107cc565b92915050565b6104f06106b2565b6001600160a01b03909116600090815260016020526040902055565b6105146106b2565b6001600160a01b0381166105795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bd565b6105828161070c565b50565b610582816107d7565b60006602ed57011e0000601f19360135811614806105bf576040516373bb264f60e11b815260040160405180910390fd5b600036602911156105e357604051632bcb7bc560e11b815260040160405180910390fd5b50602819360135600060096105fe600362ffffff851661120b565b610608919061120b565b90503661061660028361120b565b11156106355760405163c30a7bd760e01b815260040160405180910390fd5b9392505050565b60008061064a60208461120b565b90503681111561066d57604051632bcb7bc560e11b815260040160405180910390fd5b36033592915050565b60008060006106848461085b565b9092509050604e61069682602061120b565b6106a0908461124a565b6106aa919061120b565b949350505050565b6000546001600160a01b031633146103f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051600180825281830190925260009182919060208083019080368337019050509050828160008151811061079557610795611261565b6020026020010181815250506107aa816108b2565b6000815181106107bc576107bc611261565b6020026020010151915050919050565b60006104e2826108bd565b60006107e56103e88361128d565b90508042101561082757603c6107fb428361121e565b11156108235760405163b6b0916d60e01b8152600481018290524260248201526044016102bd565b5050565b60b4610833824261121e565b111561082357604051630321d0b560e01b8152600481018290524260248201526044016102bd565b60008080808061086c60418761120b565b9050600061088561087e60208461120b565b3690610978565b803594509050610896816003610978565b62ffffff9490941697933563ffffffff16965092945050505050565b60606104e282610984565b600081516000036108e157604051639e198af960e01b815260040160405180910390fd5b6108ea82610b48565b6000600283516108fa919061128d565b90506002835161090a91906112a1565b6000036109665760006109598461092260018561121e565b8151811061093257610932611261565b602002602001015185848151811061094c5761094c611261565b6020026020010151610b96565b90506106aa60028261128d565b8281815181106107bc576107bc611261565b6000610635828461121e565b60606000825167ffffffffffffffff8111156109a2576109a261109c565b6040519080825280602002602001820160405280156109cb578160200160208202803683370190505b5090506000835167ffffffffffffffff8111156109ea576109ea61109c565b604051908082528060200260200182016040528015610a13578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610a3257610a3261109c565b604051908082528060200260200182016040528015610a6557816020015b6060815260200190600190039081610a505790505b50905060005b8551811015610ac257604080516001808252818301909252906020808301908036833701905050828281518110610aa457610aa4611261565b60200260200101819052508080610aba90611231565b915050610a6b565b506000610acd61058e565b90506000610ada8261063c565b61ffff169050610aeb60028361120b565b60405190925060005b82811015610b31576000610b0b8a89898989610ba2565b9050610b17818661120b565b945082604052508080610b2990611231565b915050610af4565b50610b3c8487610e3b565b98975050505050505050565b8051602082016020820281019150805b82811015610b9057815b81811015610b87578151815180821015610b7d578084528183525b5050602001610b62565b50602001610b58565b50505050565b6000610635828461120b565b600080600080610bb18561085b565b909250905060008080606081600d610bd4610bcd60208961120b565b8990610f54565b610bde919061120b565b90506000610bf061087e60688d61120b565b90506000610c0d83610c0360418f61120b565b61087e919061120b565b9050610c198382610c2c565b9350826020850120945081359650610c50565b60408051838152602081850181019092526000910183838237601f19019392505050565b610c618765ffffffffffff16610585565b610c7585610c7060418f61120b565b610f60565b9550610c808661026f565b60ff1699505050505050505060008060005b84811015610e0857610ca5888583610fd8565b909350915060005b8c51811015610df5578c8181518110610cc857610cc8611261565b60200260200101518403610de35760008b8281518110610cea57610cea611261565b60200260200101519050610d0381896001901b16151590565b158015610d2c5750600160ff168d8381518110610d2257610d22611261565b6020026020010151105b15610ddd578c8281518110610d4357610d43611261565b602002602001018051809190610d5890611231565b81525050838b8381518110610d6f57610d6f611261565b602002602001015160018f8581518110610d8b57610d8b611261565b6020026020010151610d9d919061121e565b81518110610dad57610dad611261565b60209081029190910101526001881b81178c8381518110610dd057610dd0611261565b6020026020010181815250505b50610df5565b80610ded81611231565b915050610cad565b5080610e0081611231565b915050610c92565b50505081602082610e19919061120b565b610e23919061124a565b610e2e90604e61120b565b9998505050505050505050565b60606000835167ffffffffffffffff811115610e5957610e5961109c565b604051908082528060200260200182016040528015610e82578160200160208202803683370190505b509050600160005b8551811015610f4a5781858281518110610ea657610ea6611261565b60200260200101511015610ef357848181518110610ec657610ec6611261565b602002602001015182604051632b13aef560e01b81526004016102bd929190918252602082015260400190565b6000610f17878381518110610f0a57610f0a611261565b60200260200101516104d7565b905080848381518110610f2c57610f2c611261565b60209081029190910101525080610f4281611231565b915050610e8a565b5090949350505050565b6000610635828461124a565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa158015610fc3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008080610fe7604e8761120b565b9050600061101461100d610ffc60208961120b565b61100788600161120b565b90610f54565b8390610b96565b905060006110223683610978565b80359960209091013598509650505050505050565b80356001600160a01b03811681146102c657600080fd5b60006020828403121561106057600080fd5b61063582611037565b6000806040838503121561107c57600080fd5b61108583611037565b915061109360208401611037565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156110c557600080fd5b823567ffffffffffffffff808211156110dd57600080fd5b818501915085601f8301126110f157600080fd5b8135818111156111035761110361109c565b8060051b604051601f19603f830116810181811085821117156111285761112861109c565b60405291825284820192508381018501918883111561114657600080fd5b938501935b82851015610b3c5784358452938501939285019261114b565b600060208083528351808285015260005b8181101561119157858101830151858201604001528201611175565b506000604082860101526040601f19601f8301168501019250505092915050565b600080604083850312156111c557600080fd5b6111ce83611037565b946020939093013593505050565b6000602082840312156111ee57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104e2576104e26111f5565b818103818111156104e2576104e26111f5565b600060018201611243576112436111f5565b5060010190565b80820281158282048414176104e2576104e26111f5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261129c5761129c611277565b500490565b6000826112b0576112b0611277565b50069056fea2646970667358221220bfcab0062d26370944235128eff1dc06b64a95404ea979cf41ab5c3a90afda3864736f6c63430008130033";

type RedstoneDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedstoneDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedstoneDataProvider__factory extends ContractFactory {
  constructor(...args: RedstoneDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RedstoneDataProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RedstoneDataProvider__factory {
    return super.connect(runner) as RedstoneDataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedstoneDataProviderInterface {
    return new Interface(_abi) as RedstoneDataProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RedstoneDataProvider {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RedstoneDataProvider;
  }
}
